// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SanaCommerce.Infrastructure.Data;

#nullable disable

namespace SanaCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804154344_ProductDate")]
    partial class ProductDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb2d6e1-8c5e-4b28-8ed8-53c8b57a17f3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("5a0f889b-5e91-4d83-bb0e-0d6823d3d292"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("1291e60e-dde0-4c8b-b622-2b394cfc44e5"),
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("1f31e90d-faa1-4eae-b54d-3c33aafc2896"),
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d75e74ff-77ee-4486-9916-1c842e36a6c7"),
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca63d43b-fce4-4682-9abc-3ea7dc1c13e6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(8980), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High performance laptop",
                            Price = 1200.99m,
                            ProductCode = "LAP123",
                            Stock = 10,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("fe3a7d93-b1c3-4f8c-94ee-301b144b203f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9000), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Latest model smartphone",
                            Price = 899.99m,
                            ProductCode = "SMP456",
                            Stock = 25,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = new Guid("05ee5e3e-c8bc-4db5-b685-f4e977efd75f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9000), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Noise cancelling headphones",
                            Price = 199.99m,
                            ProductCode = "HDP789",
                            Stock = 50,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("ff095ddd-9a9d-4269-80e9-7f0b3ee7ad6f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9010), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Smartwatch with health tracking",
                            Price = 299.99m,
                            ProductCode = "SMW012",
                            Stock = 15,
                            Title = "Smartwatch"
                        },
                        new
                        {
                            Id = new Guid("d5c4841f-c5d7-42dd-b3d9-fff8548787bf"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9010), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High resolution tablet",
                            Price = 499.99m,
                            ProductCode = "TAB345",
                            Stock = 20,
                            Title = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("1057a5da-96b5-4941-a0fc-ecfabecb93cb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9020), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Portable Bluetooth speaker",
                            Price = 89.99m,
                            ProductCode = "BSP678",
                            Stock = 40,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = new Guid("200b324b-d71a-4d6a-87ba-9bfff56d609c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9020), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Digital SLR camera",
                            Price = 799.99m,
                            ProductCode = "CAM901",
                            Stock = 8,
                            Title = "Camera"
                        },
                        new
                        {
                            Id = new Guid("2ee23024-52c7-4c4a-b057-3a76ac1cd6cf"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9030), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Next-gen gaming console",
                            Price = 499.99m,
                            ProductCode = "GMC234",
                            Stock = 12,
                            Title = "Gaming Console"
                        },
                        new
                        {
                            Id = new Guid("4b8a3a62-4a03-42bb-88c9-fe2d6ea73c86"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9030), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Fast boiling electric kettle",
                            Price = 39.99m,
                            ProductCode = "EKT567",
                            Stock = 60,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = new Guid("7393c81f-19ae-4fd6-a7ea-d2a1832e5ab7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9030), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Compact microwave oven",
                            Price = 129.99m,
                            ProductCode = "MWO890",
                            Stock = 22,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = new Guid("89ccdb88-42c3-495d-96df-c11aa264ca76"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9040), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed blender",
                            Price = 59.99m,
                            ProductCode = "BLD123",
                            Stock = 35,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = new Guid("4fd96447-47fa-456e-afea-7c2284d747b7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9040), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Automatic coffee maker",
                            Price = 79.99m,
                            ProductCode = "CFM456",
                            Stock = 18,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = new Guid("ef367271-6271-4a7b-bd7d-e5c505fecdfb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9050), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Double door refrigerator",
                            Price = 1099.99m,
                            ProductCode = "RFR789",
                            Stock = 5,
                            Title = "Refrigerator"
                        },
                        new
                        {
                            Id = new Guid("75a7e3f2-b009-4a57-9e5d-d343eac0cf9a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9050), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Front load washing machine",
                            Price = 699.99m,
                            ProductCode = "WSM012",
                            Stock = 7,
                            Title = "Washing Machine"
                        },
                        new
                        {
                            Id = new Guid("f72af54d-a07a-4d2b-b476-924455f93474"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9050), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Energy efficient air conditioner",
                            Price = 499.99m,
                            ProductCode = "ACD345",
                            Stock = 9,
                            Title = "Air Conditioner"
                        },
                        new
                        {
                            Id = new Guid("608d25d5-b4ac-415d-b483-c0b97a2b8bf8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9060), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Cordless vacuum cleaner",
                            Price = 149.99m,
                            ProductCode = "VAC678",
                            Stock = 30,
                            Title = "Vacuum Cleaner"
                        },
                        new
                        {
                            Id = new Guid("7cf1726a-8656-4e0a-8051-061b2736ec47"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9060), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4K Ultra HD television",
                            Price = 799.99m,
                            ProductCode = "TVN901",
                            Stock = 14,
                            Title = "Television"
                        },
                        new
                        {
                            Id = new Guid("1d02ff3f-53b0-4dbb-931c-2554ef5c5dca"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9070), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Dolby Atmos soundbar",
                            Price = 299.99m,
                            ProductCode = "SBR234",
                            Stock = 21,
                            Title = "Soundbar"
                        },
                        new
                        {
                            Id = new Guid("7898d1c9-824b-469d-9859-1a3c4e54d8ba"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9070), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed WiFi router",
                            Price = 99.99m,
                            ProductCode = "RTR567",
                            Stock = 45,
                            Title = "Router"
                        },
                        new
                        {
                            Id = new Guid("a1b08569-ed89-4235-bc65-bee8abd5dd68"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9070), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1TB external hard drive",
                            Price = 59.99m,
                            ProductCode = "EHD890",
                            Stock = 28,
                            Title = "External Hard Drive"
                        },
                        new
                        {
                            Id = new Guid("53c9409c-2e26-4312-ba82-dbf1965ecbb7"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9080), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "24-inch full HD monitor",
                            Price = 149.99m,
                            ProductCode = "MNT123",
                            Stock = 16,
                            Title = "Monitor"
                        },
                        new
                        {
                            Id = new Guid("3a46592e-7108-4d80-a15a-d3419033ccbd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9080), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Mechanical keyboard",
                            Price = 79.99m,
                            ProductCode = "KYB456",
                            Stock = 25,
                            Title = "Keyboard"
                        },
                        new
                        {
                            Id = new Guid("b117cfbc-b5dc-4798-894e-4159c56ca8d6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Wireless mouse",
                            Price = 29.99m,
                            ProductCode = "MSE789",
                            Stock = 40,
                            Title = "Mouse"
                        },
                        new
                        {
                            Id = new Guid("6f920daa-b650-4471-b801-749ac9d38d6e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "All-in-one printer",
                            Price = 199.99m,
                            ProductCode = "PRT012",
                            Stock = 13,
                            Title = "Printer"
                        },
                        new
                        {
                            Id = new Guid("76e1598a-697e-456d-9411-00142293a24a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed document scanner",
                            Price = 99.99m,
                            ProductCode = "SCN345",
                            Stock = 10,
                            Title = "Scanner"
                        },
                        new
                        {
                            Id = new Guid("52e8e952-ae6d-4031-a49d-3c3dfd85e1d9"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9100), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "HD webcam",
                            Price = 49.99m,
                            ProductCode = "WBC678",
                            Stock = 27,
                            Title = "Webcam"
                        },
                        new
                        {
                            Id = new Guid("d577e474-1ef5-4d40-b1eb-0d7bb406e835"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9100), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Activity and sleep tracker",
                            Price = 99.99m,
                            ProductCode = "FTR901",
                            Stock = 32,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = new Guid("e7f3c81b-2834-4a2a-b963-156f9ee4bbae"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9100), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Rechargeable electric toothbrush",
                            Price = 69.99m,
                            ProductCode = "ETB234",
                            Stock = 23,
                            Title = "Electric Toothbrush"
                        },
                        new
                        {
                            Id = new Guid("766fa99f-8628-49f7-ae08-844735816573"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9110), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Professional hair dryer",
                            Price = 59.99m,
                            ProductCode = "HDR567",
                            Stock = 20,
                            Title = "Hair Dryer"
                        },
                        new
                        {
                            Id = new Guid("53b5a077-bf89-4510-b6a1-196380076a13"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 43, 44, 461, DateTimeKind.Unspecified).AddTicks(9110), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Automatic espresso machine",
                            Price = 399.99m,
                            ProductCode = "ESM890",
                            Stock = 11,
                            Title = "Espresso Machine"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
