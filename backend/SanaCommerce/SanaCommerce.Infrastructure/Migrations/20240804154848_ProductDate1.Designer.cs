// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SanaCommerce.Infrastructure.Data;

#nullable disable

namespace SanaCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804154848_ProductDate1")]
    partial class ProductDate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb2d6e1-8c5e-4b28-8ed8-53c8b57a17f3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("5a0f889b-5e91-4d83-bb0e-0d6823d3d292"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("1291e60e-dde0-4c8b-b622-2b394cfc44e5"),
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("1f31e90d-faa1-4eae-b54d-3c33aafc2896"),
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d75e74ff-77ee-4486-9916-1c842e36a6c7"),
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("256d30f6-76da-49c0-93ef-a394c5142799"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3360), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "High performance laptop",
                            Price = 1200.99m,
                            ProductCode = "LAP123",
                            Stock = 10,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("0b9cdcb9-a2cf-4676-b069-e386549f9386"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3680), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Latest model smartphone",
                            Price = 899.99m,
                            ProductCode = "SMP456",
                            Stock = 25,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = new Guid("99b29f56-c34b-4ee8-871a-670655708338"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3690), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Noise cancelling headphones",
                            Price = 199.99m,
                            ProductCode = "HDP789",
                            Stock = 50,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("c98975ad-db22-448a-a91f-9ece217cc836"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3690), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Smartwatch with health tracking",
                            Price = 299.99m,
                            ProductCode = "SMW012",
                            Stock = 15,
                            Title = "Smartwatch"
                        },
                        new
                        {
                            Id = new Guid("f36b4c36-846d-4061-966f-13964784b432"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3700), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "High resolution tablet",
                            Price = 499.99m,
                            ProductCode = "TAB345",
                            Stock = 20,
                            Title = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("86249afd-3c34-410e-8a8d-07f7b9319f3f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3700), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Portable Bluetooth speaker",
                            Price = 89.99m,
                            ProductCode = "BSP678",
                            Stock = 40,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = new Guid("542fbc65-792d-467e-af93-a22c5771b720"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3710), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Digital SLR camera",
                            Price = 799.99m,
                            ProductCode = "CAM901",
                            Stock = 8,
                            Title = "Camera"
                        },
                        new
                        {
                            Id = new Guid("31fc9572-1abd-447b-bf8a-24283bc3ac6e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3710), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Next-gen gaming console",
                            Price = 499.99m,
                            ProductCode = "GMC234",
                            Stock = 12,
                            Title = "Gaming Console"
                        },
                        new
                        {
                            Id = new Guid("e1830ee0-e4d1-4d07-bcf6-ef9cb8a85f4a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3720), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Fast boiling electric kettle",
                            Price = 39.99m,
                            ProductCode = "EKT567",
                            Stock = 60,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = new Guid("84a38b7e-01e6-4253-8a5f-c769b86e17a6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3720), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Compact microwave oven",
                            Price = 129.99m,
                            ProductCode = "MWO890",
                            Stock = 22,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = new Guid("adc99544-f06b-4c3a-ab9f-684735e57d38"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "High-speed blender",
                            Price = 59.99m,
                            ProductCode = "BLD123",
                            Stock = 35,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = new Guid("f9bc788a-24eb-4082-9866-8f0fb08ad970"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Automatic coffee maker",
                            Price = 79.99m,
                            ProductCode = "CFM456",
                            Stock = 18,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = new Guid("740aec81-e358-4d61-9cc3-39743f126fdd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3740), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Double door refrigerator",
                            Price = 1099.99m,
                            ProductCode = "RFR789",
                            Stock = 5,
                            Title = "Refrigerator"
                        },
                        new
                        {
                            Id = new Guid("3e9d6c5d-eb58-493b-b71e-a18cd873fb01"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3740), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Front load washing machine",
                            Price = 699.99m,
                            ProductCode = "WSM012",
                            Stock = 7,
                            Title = "Washing Machine"
                        },
                        new
                        {
                            Id = new Guid("4fd36778-c189-4b3b-a214-0e759a36c0ab"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3750), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Energy efficient air conditioner",
                            Price = 499.99m,
                            ProductCode = "ACD345",
                            Stock = 9,
                            Title = "Air Conditioner"
                        },
                        new
                        {
                            Id = new Guid("d2d2a4f9-f74b-4a4d-8aea-20493c2991d5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3750), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Cordless vacuum cleaner",
                            Price = 149.99m,
                            ProductCode = "VAC678",
                            Stock = 30,
                            Title = "Vacuum Cleaner"
                        },
                        new
                        {
                            Id = new Guid("16c65138-db8d-457b-b64c-ec0f90aa44c8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3760), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "4K Ultra HD television",
                            Price = 799.99m,
                            ProductCode = "TVN901",
                            Stock = 14,
                            Title = "Television"
                        },
                        new
                        {
                            Id = new Guid("b817b853-00a2-4661-bb39-0d58bc56b934"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3760), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Dolby Atmos soundbar",
                            Price = 299.99m,
                            ProductCode = "SBR234",
                            Stock = 21,
                            Title = "Soundbar"
                        },
                        new
                        {
                            Id = new Guid("4cd3198d-2f63-4f79-ae78-3dab0c2f1145"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3770), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "High-speed WiFi router",
                            Price = 99.99m,
                            ProductCode = "RTR567",
                            Stock = 45,
                            Title = "Router"
                        },
                        new
                        {
                            Id = new Guid("853dde7f-6f88-4c21-8fe2-0f0fb3b5d0ef"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3770), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "1TB external hard drive",
                            Price = 59.99m,
                            ProductCode = "EHD890",
                            Stock = 28,
                            Title = "External Hard Drive"
                        },
                        new
                        {
                            Id = new Guid("f55a7c21-aba7-4e07-bbcb-a6d613a614dd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3780), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "24-inch full HD monitor",
                            Price = 149.99m,
                            ProductCode = "MNT123",
                            Stock = 16,
                            Title = "Monitor"
                        },
                        new
                        {
                            Id = new Guid("389c1a63-7249-49b7-8d71-d086c30a6bb8"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3780), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Mechanical keyboard",
                            Price = 79.99m,
                            ProductCode = "KYB456",
                            Stock = 25,
                            Title = "Keyboard"
                        },
                        new
                        {
                            Id = new Guid("2b19fc1f-7e5c-4072-93ae-2154ed8a0264"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3780), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Wireless mouse",
                            Price = 29.99m,
                            ProductCode = "MSE789",
                            Stock = 40,
                            Title = "Mouse"
                        },
                        new
                        {
                            Id = new Guid("f88fa99e-cbbf-41f0-80b5-93789547770d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3790), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "All-in-one printer",
                            Price = 199.99m,
                            ProductCode = "PRT012",
                            Stock = 13,
                            Title = "Printer"
                        },
                        new
                        {
                            Id = new Guid("7db72d78-187d-48ca-b4cd-77d455065e7f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3790), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "High-speed document scanner",
                            Price = 99.99m,
                            ProductCode = "SCN345",
                            Stock = 10,
                            Title = "Scanner"
                        },
                        new
                        {
                            Id = new Guid("c5249b52-b01d-442b-9797-0c7349b52e18"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3800), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "HD webcam",
                            Price = 49.99m,
                            ProductCode = "WBC678",
                            Stock = 27,
                            Title = "Webcam"
                        },
                        new
                        {
                            Id = new Guid("6d206f53-cc92-4fb4-ac40-ec5eb6208870"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3800), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Activity and sleep tracker",
                            Price = 99.99m,
                            ProductCode = "FTR901",
                            Stock = 32,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = new Guid("998cc45a-7bc0-4c19-ad3b-f45eaa35faee"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3810), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Rechargeable electric toothbrush",
                            Price = 69.99m,
                            ProductCode = "ETB234",
                            Stock = 23,
                            Title = "Electric Toothbrush"
                        },
                        new
                        {
                            Id = new Guid("f4ebe020-f618-4ef3-b30c-244a0e8e7f4a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3810), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Professional hair dryer",
                            Price = 59.99m,
                            ProductCode = "HDR567",
                            Stock = 20,
                            Title = "Hair Dryer"
                        },
                        new
                        {
                            Id = new Guid("cb0cb708-932d-4d74-874f-f0aa72ca002a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 48, 48, 818, DateTimeKind.Unspecified).AddTicks(3820), new TimeSpan(0, -5, 0, 0, 0)),
                            Description = "Automatic espresso machine",
                            Price = 399.99m,
                            ProductCode = "ESM890",
                            Stock = 11,
                            Title = "Espresso Machine"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
