// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SanaCommerce.Infrastructure.Data;

#nullable disable

namespace SanaCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804053814_OrderDate1")]
    partial class OrderDate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb2d6e1-8c5e-4b28-8ed8-53c8b57a17f3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("5a0f889b-5e91-4d83-bb0e-0d6823d3d292"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("1291e60e-dde0-4c8b-b622-2b394cfc44e5"),
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("1f31e90d-faa1-4eae-b54d-3c33aafc2896"),
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d75e74ff-77ee-4486-9916-1c842e36a6c7"),
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5015dbcb-4b52-45c3-8635-b7eec97dd652"),
                            Description = "High performance laptop",
                            Price = 1200.99m,
                            ProductCode = "LAP123",
                            Stock = 10,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("08b756e2-baad-4422-9b68-e10b130d3cb4"),
                            Description = "Latest model smartphone",
                            Price = 899.99m,
                            ProductCode = "SMP456",
                            Stock = 25,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = new Guid("76319fa0-eb12-4cc1-a4cd-f878c87e77ca"),
                            Description = "Noise cancelling headphones",
                            Price = 199.99m,
                            ProductCode = "HDP789",
                            Stock = 50,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("3fac869d-1c01-4857-9a29-15910784d699"),
                            Description = "Smartwatch with health tracking",
                            Price = 299.99m,
                            ProductCode = "SMW012",
                            Stock = 15,
                            Title = "Smartwatch"
                        },
                        new
                        {
                            Id = new Guid("54b3d25c-6d3b-42cc-87b4-8cd276f7c877"),
                            Description = "High resolution tablet",
                            Price = 499.99m,
                            ProductCode = "TAB345",
                            Stock = 20,
                            Title = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("ca7cd202-09ec-415f-ab69-623da4b2e54b"),
                            Description = "Portable Bluetooth speaker",
                            Price = 89.99m,
                            ProductCode = "BSP678",
                            Stock = 40,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = new Guid("2a9ab043-0c6a-4442-8253-414129a691e6"),
                            Description = "Digital SLR camera",
                            Price = 799.99m,
                            ProductCode = "CAM901",
                            Stock = 8,
                            Title = "Camera"
                        },
                        new
                        {
                            Id = new Guid("96d68020-640b-4afe-8b8c-c93513dc40d5"),
                            Description = "Next-gen gaming console",
                            Price = 499.99m,
                            ProductCode = "GMC234",
                            Stock = 12,
                            Title = "Gaming Console"
                        },
                        new
                        {
                            Id = new Guid("ee59ba13-ea67-4ef1-8878-495de9a5ee6a"),
                            Description = "Fast boiling electric kettle",
                            Price = 39.99m,
                            ProductCode = "EKT567",
                            Stock = 60,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = new Guid("8a9eb7b6-12b5-4e83-9b2b-6ee407a72aa2"),
                            Description = "Compact microwave oven",
                            Price = 129.99m,
                            ProductCode = "MWO890",
                            Stock = 22,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = new Guid("0e2e63af-ac0a-498b-bbf3-22baec83476f"),
                            Description = "High-speed blender",
                            Price = 59.99m,
                            ProductCode = "BLD123",
                            Stock = 35,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = new Guid("f5ede965-02e3-4522-bee8-f93e21c3f590"),
                            Description = "Automatic coffee maker",
                            Price = 79.99m,
                            ProductCode = "CFM456",
                            Stock = 18,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = new Guid("71cefd95-2a74-4781-b4eb-82123be4a99e"),
                            Description = "Double door refrigerator",
                            Price = 1099.99m,
                            ProductCode = "RFR789",
                            Stock = 5,
                            Title = "Refrigerator"
                        },
                        new
                        {
                            Id = new Guid("dc7c82e0-4f5d-4f48-a8a3-3656645657cb"),
                            Description = "Front load washing machine",
                            Price = 699.99m,
                            ProductCode = "WSM012",
                            Stock = 7,
                            Title = "Washing Machine"
                        },
                        new
                        {
                            Id = new Guid("2194f53f-05b8-45bd-898d-4f4fa8ffccd4"),
                            Description = "Energy efficient air conditioner",
                            Price = 499.99m,
                            ProductCode = "ACD345",
                            Stock = 9,
                            Title = "Air Conditioner"
                        },
                        new
                        {
                            Id = new Guid("781827ea-142a-4fb5-8b4c-fe6e36d8982a"),
                            Description = "Cordless vacuum cleaner",
                            Price = 149.99m,
                            ProductCode = "VAC678",
                            Stock = 30,
                            Title = "Vacuum Cleaner"
                        },
                        new
                        {
                            Id = new Guid("06095f7c-e5fc-4566-a255-7559615035ba"),
                            Description = "4K Ultra HD television",
                            Price = 799.99m,
                            ProductCode = "TVN901",
                            Stock = 14,
                            Title = "Television"
                        },
                        new
                        {
                            Id = new Guid("9ab3802d-97dd-45e1-a16d-784bf0f2aef2"),
                            Description = "Dolby Atmos soundbar",
                            Price = 299.99m,
                            ProductCode = "SBR234",
                            Stock = 21,
                            Title = "Soundbar"
                        },
                        new
                        {
                            Id = new Guid("4ff296b1-8c90-4765-aec8-5c7b17bcc4f5"),
                            Description = "High-speed WiFi router",
                            Price = 99.99m,
                            ProductCode = "RTR567",
                            Stock = 45,
                            Title = "Router"
                        },
                        new
                        {
                            Id = new Guid("86a1bd9b-abe8-4f89-8b63-645bc1a2b3e1"),
                            Description = "1TB external hard drive",
                            Price = 59.99m,
                            ProductCode = "EHD890",
                            Stock = 28,
                            Title = "External Hard Drive"
                        },
                        new
                        {
                            Id = new Guid("46a32d62-0f91-49f8-9092-a4a9a533309b"),
                            Description = "24-inch full HD monitor",
                            Price = 149.99m,
                            ProductCode = "MNT123",
                            Stock = 16,
                            Title = "Monitor"
                        },
                        new
                        {
                            Id = new Guid("fe8a6297-7ccd-4224-96f2-7cbfa72fab3c"),
                            Description = "Mechanical keyboard",
                            Price = 79.99m,
                            ProductCode = "KYB456",
                            Stock = 25,
                            Title = "Keyboard"
                        },
                        new
                        {
                            Id = new Guid("46d0e1f9-a68c-4ad0-9ef4-630fda64cf19"),
                            Description = "Wireless mouse",
                            Price = 29.99m,
                            ProductCode = "MSE789",
                            Stock = 40,
                            Title = "Mouse"
                        },
                        new
                        {
                            Id = new Guid("e0ebbdda-ccd3-4226-b9c2-974c1d53ed7c"),
                            Description = "All-in-one printer",
                            Price = 199.99m,
                            ProductCode = "PRT012",
                            Stock = 13,
                            Title = "Printer"
                        },
                        new
                        {
                            Id = new Guid("0065ddf5-cb40-4070-888c-b0f2338444dc"),
                            Description = "High-speed document scanner",
                            Price = 99.99m,
                            ProductCode = "SCN345",
                            Stock = 10,
                            Title = "Scanner"
                        },
                        new
                        {
                            Id = new Guid("df0602e7-49df-4343-9546-e6e84f328256"),
                            Description = "HD webcam",
                            Price = 49.99m,
                            ProductCode = "WBC678",
                            Stock = 27,
                            Title = "Webcam"
                        },
                        new
                        {
                            Id = new Guid("9fa08ac5-5177-4ea8-ab02-dac1a481aabd"),
                            Description = "Activity and sleep tracker",
                            Price = 99.99m,
                            ProductCode = "FTR901",
                            Stock = 32,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = new Guid("0aedcea3-6a5e-4478-9f0e-702abc832d58"),
                            Description = "Rechargeable electric toothbrush",
                            Price = 69.99m,
                            ProductCode = "ETB234",
                            Stock = 23,
                            Title = "Electric Toothbrush"
                        },
                        new
                        {
                            Id = new Guid("28ec847a-5d8c-431f-8220-e0756a0f589f"),
                            Description = "Professional hair dryer",
                            Price = 59.99m,
                            ProductCode = "HDR567",
                            Stock = 20,
                            Title = "Hair Dryer"
                        },
                        new
                        {
                            Id = new Guid("fceccf79-32bf-47fb-83a4-1b3a309672f4"),
                            Description = "Automatic espresso machine",
                            Price = 399.99m,
                            ProductCode = "ESM890",
                            Stock = 11,
                            Title = "Espresso Machine"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
