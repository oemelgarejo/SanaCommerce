// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SanaCommerce.Infrastructure.Data;

#nullable disable

namespace SanaCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240803152739_SeedProducts")]
    partial class SeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb2d6e1-8c5e-4b28-8ed8-53c8b57a17f3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("5a0f889b-5e91-4d83-bb0e-0d6823d3d292"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("1291e60e-dde0-4c8b-b622-2b394cfc44e5"),
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("1f31e90d-faa1-4eae-b54d-3c33aafc2896"),
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d75e74ff-77ee-4486-9916-1c842e36a6c7"),
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e33cb1f-fc84-4493-857d-09b6b5eb59aa"),
                            Description = "High performance laptop",
                            Price = 1200.99m,
                            ProductCode = "LAP123",
                            Stock = 10,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("87cd360a-601d-4c5a-a7d3-9c4d5e689876"),
                            Description = "Latest model smartphone",
                            Price = 899.99m,
                            ProductCode = "SMP456",
                            Stock = 25,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = new Guid("0112ad75-29d6-4b13-a16c-7a15eeef63b1"),
                            Description = "Noise cancelling headphones",
                            Price = 199.99m,
                            ProductCode = "HDP789",
                            Stock = 50,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("8f16abdc-b411-4db2-9f44-1fd979338521"),
                            Description = "Smartwatch with health tracking",
                            Price = 299.99m,
                            ProductCode = "SMW012",
                            Stock = 15,
                            Title = "Smartwatch"
                        },
                        new
                        {
                            Id = new Guid("287f7ef8-4e1b-4457-ba52-d05753133da0"),
                            Description = "High resolution tablet",
                            Price = 499.99m,
                            ProductCode = "TAB345",
                            Stock = 20,
                            Title = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("19ade003-cae5-4eaa-82ef-330cf4b94e72"),
                            Description = "Portable Bluetooth speaker",
                            Price = 89.99m,
                            ProductCode = "BSP678",
                            Stock = 40,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = new Guid("7c2d76ca-c84f-48d1-bedc-f1cbc3fe8e05"),
                            Description = "Digital SLR camera",
                            Price = 799.99m,
                            ProductCode = "CAM901",
                            Stock = 8,
                            Title = "Camera"
                        },
                        new
                        {
                            Id = new Guid("3de93926-facb-4302-930b-1419a8ba2425"),
                            Description = "Next-gen gaming console",
                            Price = 499.99m,
                            ProductCode = "GMC234",
                            Stock = 12,
                            Title = "Gaming Console"
                        },
                        new
                        {
                            Id = new Guid("5bdfec9a-7d7d-4512-8cd4-1afdd89f24f9"),
                            Description = "Fast boiling electric kettle",
                            Price = 39.99m,
                            ProductCode = "EKT567",
                            Stock = 60,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = new Guid("62f7fbcd-7df4-473c-a57b-df4290f3a2e6"),
                            Description = "Compact microwave oven",
                            Price = 129.99m,
                            ProductCode = "MWO890",
                            Stock = 22,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = new Guid("d19b7f60-3326-4bc5-9add-826871024a2a"),
                            Description = "High-speed blender",
                            Price = 59.99m,
                            ProductCode = "BLD123",
                            Stock = 35,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = new Guid("6ed181c6-bc62-44cc-a2b9-150e804a0e39"),
                            Description = "Automatic coffee maker",
                            Price = 79.99m,
                            ProductCode = "CFM456",
                            Stock = 18,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = new Guid("5dc08406-5768-4395-967d-7a2c8bfb49b3"),
                            Description = "Double door refrigerator",
                            Price = 1099.99m,
                            ProductCode = "RFR789",
                            Stock = 5,
                            Title = "Refrigerator"
                        },
                        new
                        {
                            Id = new Guid("03d9e34d-e4cf-41f3-9a23-dbaadb0f471a"),
                            Description = "Front load washing machine",
                            Price = 699.99m,
                            ProductCode = "WSM012",
                            Stock = 7,
                            Title = "Washing Machine"
                        },
                        new
                        {
                            Id = new Guid("b749794b-15b0-4417-9cf1-7ba467b4af6a"),
                            Description = "Energy efficient air conditioner",
                            Price = 499.99m,
                            ProductCode = "ACD345",
                            Stock = 9,
                            Title = "Air Conditioner"
                        },
                        new
                        {
                            Id = new Guid("b9760403-d5e1-4f64-adf4-09820299b6ae"),
                            Description = "Cordless vacuum cleaner",
                            Price = 149.99m,
                            ProductCode = "VAC678",
                            Stock = 30,
                            Title = "Vacuum Cleaner"
                        },
                        new
                        {
                            Id = new Guid("9a4da6a9-8c83-4cc8-8db2-758a3008b5f5"),
                            Description = "4K Ultra HD television",
                            Price = 799.99m,
                            ProductCode = "TVN901",
                            Stock = 14,
                            Title = "Television"
                        },
                        new
                        {
                            Id = new Guid("c6f1e7b9-3029-46d4-af69-b21112f17c51"),
                            Description = "Dolby Atmos soundbar",
                            Price = 299.99m,
                            ProductCode = "SBR234",
                            Stock = 21,
                            Title = "Soundbar"
                        },
                        new
                        {
                            Id = new Guid("230ad032-4a1d-437f-93e3-102e14260184"),
                            Description = "High-speed WiFi router",
                            Price = 99.99m,
                            ProductCode = "RTR567",
                            Stock = 45,
                            Title = "Router"
                        },
                        new
                        {
                            Id = new Guid("9f1d03ae-a1b6-4834-aeec-bc5912fef449"),
                            Description = "1TB external hard drive",
                            Price = 59.99m,
                            ProductCode = "EHD890",
                            Stock = 28,
                            Title = "External Hard Drive"
                        },
                        new
                        {
                            Id = new Guid("88b0942b-1caa-49a3-9a61-3191f4e4b08d"),
                            Description = "24-inch full HD monitor",
                            Price = 149.99m,
                            ProductCode = "MNT123",
                            Stock = 16,
                            Title = "Monitor"
                        },
                        new
                        {
                            Id = new Guid("d4481a19-3cda-4003-8090-f6ce067b6409"),
                            Description = "Mechanical keyboard",
                            Price = 79.99m,
                            ProductCode = "KYB456",
                            Stock = 25,
                            Title = "Keyboard"
                        },
                        new
                        {
                            Id = new Guid("c635f558-ebf3-47b2-9a83-bd9b71ce284b"),
                            Description = "Wireless mouse",
                            Price = 29.99m,
                            ProductCode = "MSE789",
                            Stock = 40,
                            Title = "Mouse"
                        },
                        new
                        {
                            Id = new Guid("8e1dbab3-7fad-4d4c-9bf3-e15bd5059440"),
                            Description = "All-in-one printer",
                            Price = 199.99m,
                            ProductCode = "PRT012",
                            Stock = 13,
                            Title = "Printer"
                        },
                        new
                        {
                            Id = new Guid("39e9b344-9c86-40f1-870c-5a6a089e2371"),
                            Description = "High-speed document scanner",
                            Price = 99.99m,
                            ProductCode = "SCN345",
                            Stock = 10,
                            Title = "Scanner"
                        },
                        new
                        {
                            Id = new Guid("20c4cab1-4fcf-4051-ad7c-cafab29382af"),
                            Description = "HD webcam",
                            Price = 49.99m,
                            ProductCode = "WBC678",
                            Stock = 27,
                            Title = "Webcam"
                        },
                        new
                        {
                            Id = new Guid("472f4f78-2c60-4343-b770-02baf524b92c"),
                            Description = "Activity and sleep tracker",
                            Price = 99.99m,
                            ProductCode = "FTR901",
                            Stock = 32,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = new Guid("2a650ec4-27ca-43e2-8a28-321a9f0adf72"),
                            Description = "Rechargeable electric toothbrush",
                            Price = 69.99m,
                            ProductCode = "ETB234",
                            Stock = 23,
                            Title = "Electric Toothbrush"
                        },
                        new
                        {
                            Id = new Guid("046ead53-ce3e-47f7-873c-1b9f51b7941d"),
                            Description = "Professional hair dryer",
                            Price = 59.99m,
                            ProductCode = "HDR567",
                            Stock = 20,
                            Title = "Hair Dryer"
                        },
                        new
                        {
                            Id = new Guid("8c7836a4-5ef1-40b0-9a9f-3431ab261661"),
                            Description = "Automatic espresso machine",
                            Price = 399.99m,
                            ProductCode = "ESM890",
                            Stock = 11,
                            Title = "Espresso Machine"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
