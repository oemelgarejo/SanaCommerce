// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SanaCommerce.Infrastructure.Data;

#nullable disable

namespace SanaCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804155139_ProductDateOffSet")]
    partial class ProductDateOffSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb2d6e1-8c5e-4b28-8ed8-53c8b57a17f3"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("5a0f889b-5e91-4d83-bb0e-0d6823d3d292"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("1291e60e-dde0-4c8b-b622-2b394cfc44e5"),
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("1f31e90d-faa1-4eae-b54d-3c33aafc2896"),
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d75e74ff-77ee-4486-9916-1c842e36a6c7"),
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("09ebc12a-dcfa-4847-94f5-f4ff69d4d37a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1010), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High performance laptop",
                            Price = 1200.99m,
                            ProductCode = "LAP123",
                            Stock = 10,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("218519d2-cd32-4e63-8c5d-5b19c2e2e9ba"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1070), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Latest model smartphone",
                            Price = 899.99m,
                            ProductCode = "SMP456",
                            Stock = 25,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = new Guid("8d9d6b1d-0dfb-4c6c-9f0e-d4db8898173f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1070), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Noise cancelling headphones",
                            Price = 199.99m,
                            ProductCode = "HDP789",
                            Stock = 50,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("357f9a0b-346a-4c01-8ed2-9f5005a8cb5f"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1080), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Smartwatch with health tracking",
                            Price = 299.99m,
                            ProductCode = "SMW012",
                            Stock = 15,
                            Title = "Smartwatch"
                        },
                        new
                        {
                            Id = new Guid("686d597e-bc64-479c-aab9-9a766ed63a82"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1080), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High resolution tablet",
                            Price = 499.99m,
                            ProductCode = "TAB345",
                            Stock = 20,
                            Title = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("fe14ff54-1c6c-45a8-bf62-9c5990da8573"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Portable Bluetooth speaker",
                            Price = 89.99m,
                            ProductCode = "BSP678",
                            Stock = 40,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            Id = new Guid("6c0bb29e-45d3-40d6-9aa8-e86449e8e29d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Digital SLR camera",
                            Price = 799.99m,
                            ProductCode = "CAM901",
                            Stock = 8,
                            Title = "Camera"
                        },
                        new
                        {
                            Id = new Guid("f69ba2f2-9568-4e27-8c02-1fe81fe52d47"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1090), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Next-gen gaming console",
                            Price = 499.99m,
                            ProductCode = "GMC234",
                            Stock = 12,
                            Title = "Gaming Console"
                        },
                        new
                        {
                            Id = new Guid("b579cf92-efd5-4960-9405-e45957a56f0c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1100), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Fast boiling electric kettle",
                            Price = 39.99m,
                            ProductCode = "EKT567",
                            Stock = 60,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            Id = new Guid("9e050546-c17e-4681-8348-64106e5a2443"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1100), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Compact microwave oven",
                            Price = 129.99m,
                            ProductCode = "MWO890",
                            Stock = 22,
                            Title = "Microwave Oven"
                        },
                        new
                        {
                            Id = new Guid("4a7deb44-4cec-4ac2-9498-dd0aa2fd558e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1110), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed blender",
                            Price = 59.99m,
                            ProductCode = "BLD123",
                            Stock = 35,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = new Guid("0da731d3-1802-4a4f-8158-be973e147ce0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1110), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Automatic coffee maker",
                            Price = 79.99m,
                            ProductCode = "CFM456",
                            Stock = 18,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = new Guid("79722887-2e83-4457-8dac-8ba24f79188e"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1120), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Double door refrigerator",
                            Price = 1099.99m,
                            ProductCode = "RFR789",
                            Stock = 5,
                            Title = "Refrigerator"
                        },
                        new
                        {
                            Id = new Guid("401ed72f-6eab-4f55-9325-37e74dc9c327"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1120), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Front load washing machine",
                            Price = 699.99m,
                            ProductCode = "WSM012",
                            Stock = 7,
                            Title = "Washing Machine"
                        },
                        new
                        {
                            Id = new Guid("9ab75f70-738c-40a6-b44f-5a40dcefc04c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1120), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Energy efficient air conditioner",
                            Price = 499.99m,
                            ProductCode = "ACD345",
                            Stock = 9,
                            Title = "Air Conditioner"
                        },
                        new
                        {
                            Id = new Guid("e81b4b99-fb86-4af5-8209-8b0f15763557"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1130), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Cordless vacuum cleaner",
                            Price = 149.99m,
                            ProductCode = "VAC678",
                            Stock = 30,
                            Title = "Vacuum Cleaner"
                        },
                        new
                        {
                            Id = new Guid("35dcdc75-a20c-4886-833f-37120182470d"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1130), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "4K Ultra HD television",
                            Price = 799.99m,
                            ProductCode = "TVN901",
                            Stock = 14,
                            Title = "Television"
                        },
                        new
                        {
                            Id = new Guid("3aa5bc03-a313-4b5c-8657-7cf85ab82e51"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Dolby Atmos soundbar",
                            Price = 299.99m,
                            ProductCode = "SBR234",
                            Stock = 21,
                            Title = "Soundbar"
                        },
                        new
                        {
                            Id = new Guid("0c23e156-b0bd-447b-9bea-c98a064d3ef5"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed WiFi router",
                            Price = 99.99m,
                            ProductCode = "RTR567",
                            Stock = 45,
                            Title = "Router"
                        },
                        new
                        {
                            Id = new Guid("8ba89df0-6e67-4bed-88d7-b62f1722dafd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "1TB external hard drive",
                            Price = 59.99m,
                            ProductCode = "EHD890",
                            Stock = 28,
                            Title = "External Hard Drive"
                        },
                        new
                        {
                            Id = new Guid("fe4a39be-40db-4762-82af-6b031ab0cd16"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1150), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "24-inch full HD monitor",
                            Price = 149.99m,
                            ProductCode = "MNT123",
                            Stock = 16,
                            Title = "Monitor"
                        },
                        new
                        {
                            Id = new Guid("2868c7ca-f9df-480b-8552-af80a4f91b89"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1150), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Mechanical keyboard",
                            Price = 79.99m,
                            ProductCode = "KYB456",
                            Stock = 25,
                            Title = "Keyboard"
                        },
                        new
                        {
                            Id = new Guid("6537dd9f-84be-4ec9-a089-6a12affb0737"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1160), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Wireless mouse",
                            Price = 29.99m,
                            ProductCode = "MSE789",
                            Stock = 40,
                            Title = "Mouse"
                        },
                        new
                        {
                            Id = new Guid("03c85f68-84eb-4342-b5d1-514b853be3ce"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1160), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "All-in-one printer",
                            Price = 199.99m,
                            ProductCode = "PRT012",
                            Stock = 13,
                            Title = "Printer"
                        },
                        new
                        {
                            Id = new Guid("1d4f3159-2af7-4631-ab0a-a7f20edb2d66"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1160), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "High-speed document scanner",
                            Price = 99.99m,
                            ProductCode = "SCN345",
                            Stock = 10,
                            Title = "Scanner"
                        },
                        new
                        {
                            Id = new Guid("167ec7b2-927d-421f-b935-22af153b5c55"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1170), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "HD webcam",
                            Price = 49.99m,
                            ProductCode = "WBC678",
                            Stock = 27,
                            Title = "Webcam"
                        },
                        new
                        {
                            Id = new Guid("8168f564-0b41-48fd-ac7d-ce087077a754"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1170), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Activity and sleep tracker",
                            Price = 99.99m,
                            ProductCode = "FTR901",
                            Stock = 32,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = new Guid("c34527c1-8790-44f3-8f6a-171b8f1929d0"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1180), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Rechargeable electric toothbrush",
                            Price = 69.99m,
                            ProductCode = "ETB234",
                            Stock = 23,
                            Title = "Electric Toothbrush"
                        },
                        new
                        {
                            Id = new Guid("1690f4a0-b729-4a01-873a-d27c585cde4c"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1180), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Professional hair dryer",
                            Price = 59.99m,
                            ProductCode = "HDR567",
                            Stock = 20,
                            Title = "Hair Dryer"
                        },
                        new
                        {
                            Id = new Guid("72242d86-f9b3-4c32-a826-84892174c7af"),
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 15, 51, 39, 215, DateTimeKind.Unspecified).AddTicks(1190), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Automatic espresso machine",
                            Price = 399.99m,
                            ProductCode = "ESM890",
                            Stock = 11,
                            Title = "Espresso Machine"
                        });
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SanaCommerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanaCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SanaCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
